class CalibrationValues:
    def __init__(self):
        self.face_height_on_60cm_away = 1
        self.face_position_correction_width = 0
        self.face_position_correction_height = 0
        self.face_tilt_correction_width = 0
        self.face_tilt_correction_height = 0
        self.face_distance_offset = 0
        self.left_eye_distance_offset = 0
        self.right_eye_distance_offset = 0
        self.face_tilt_factor_width = 1
        self.face_tilt_factor_height = 1
        self.face_point_correction = [0, 0]
        self.left_eye_point_correction = [0, 0]
        self.right_eye_point_correction = [0, 0]
        self.left_eye_tilt_correction_width = 0
        self.left_eye_tilt_correction_height = 0
        self.right_eye_tilt_correction_width = 0
        self.right_eye_tilt_correction_height = 0
        self.left_eye_tilt_factor_height = 1
        self.left_eye_tilt_factor_width = 1
        self.right_eye_tilt_factor_height = 1
        self.right_eye_tilt_factor_width = 1
        self.left_eye_calibration_point_offset = (0, 0, 0)
        self.right_eye_calibration_point_offset = (0, 0, 0)
        self.eyes_depth_offset = 0
        self.x_off, self.y_off, self.z_off = 0, 0, 0
        self.left_gaze_point_offset, self.right_gaze_point_offset = [0, 0], [0, 0]
        self.left_gaze_point_factor, self.right_gaze_point_factor = [1, 1], [1, 1]
        self.rvec_init, self.tvec_init = [], []

    def set_values_from_dictionary(self, dict):
        self.face_height_on_60cm_away = dict['face_height_on_60cm_away']
        self.face_position_correction_width = dict['face_position_correction_width']
        self.face_position_correction_height = dict['face_position_correction_height']
        self.face_tilt_correction_width = dict['face_tilt_correction_width']
        self.face_tilt_correction_height = dict['face_tilt_correction_height']
        self.face_distance_offset = dict['face_distance_offset']
        self.left_eye_distance_offset = dict['left_eye_distance_offset']
        self.right_eye_distance_offset = dict['right_eye_distance_offset']
        self.face_tilt_factor_width = dict['face_tilt_factor_width']
        self.face_tilt_factor_height = dict['face_tilt_factor_height']
        self.face_point_correction = dict['face_point_correction']
        self.left_eye_point_correction = dict['left_eye_point_correction']
        self.right_eye_point_correction = dict['right_eye_point_correction']
        self.left_eye_tilt_correction_width = dict['left_eye_tilt_correction_width']
        self.left_eye_tilt_correction_height = dict['left_eye_tilt_correction_height']
        self.right_eye_tilt_correction_width = dict['right_eye_tilt_correction_width']
        self.right_eye_tilt_correction_height = dict['right_eye_tilt_correction_height']
        self.left_eye_tilt_factor_height = dict['left_eye_tilt_factor_height']
        self.left_eye_tilt_factor_width = dict['left_eye_tilt_factor_width']
        self.right_eye_tilt_factor_height = dict['right_eye_tilt_factor_height']
        self.right_eye_tilt_factor_width = dict['right_eye_tilt_factor_width']
        self.left_eye_calibration_point_offset = dict['left_eye_calibration_point_offset']
        self.right_eye_calibration_point_offset = dict['right_eye_calibration_point_offset']
        self.eyes_depth_offset = dict['eyes_depth_offset']
        self.x_off = dict['x_off']
        self.y_off = dict['y_off']
        self.z_off = dict['z_off']
        self.left_gaze_point_offset = dict['left_gaze_point_offset']
        self.right_gaze_point_offset = dict['right_gaze_point_offset']
        self.left_gaze_point_factor = dict['left_gaze_point_factor']
        self.right_gaze_point_factor = dict['right_gaze_point_factor']
        self.rvec_init = dict['rvec_init']
        self.tvec_init = dict['tvec_init']
